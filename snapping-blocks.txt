snappable blocks

todo
----

[x] retest on headset
[x] rename brick -> block
[x] create shadow block, identical shape but different colours, no collider (or disabled collider)
[x] create MagnetAlignmentHandle empty object matching magnet position and rotation
[x] parent shadow block with MagnetAlignmentHandle - now placing handle places block w.r.t. magnet
[...] when snapping:
 - [x] move handle to other Magnet position
 - [x] rotate to match (inverse) - maybe Quaternion.FromToRotation
[x] track state as snapping
[x] clear state, remove snapping when triggers exit
[x] snap when snapping and release occurs
 - [x] do static tests and research - FixedJoint vs reparenting
   - need Rigidbody on each block, FixedJoint between them both, both colliders enabled, ensure rigidbody enabled
 - [x] move static setup into script step by step
 - [x] add (FixedJoint/parenting) to other
   - [x] trial one shot on first collide - link shadow block to other block; disable this block
   - [x] link actual block to other block and remove shadow
   - [x] when grab release (XGI Select Exited event) when attracted
[x] when not snapped and release occurs, remove / replace shadow block
[x] re-enable xrgi on block - works just straight after
[x] allow retry / recycle:
  - [x] unlatch - grab both blocks moves back to snapping
    - [x] unlatch if greater latched block grabbed and separated
    - [x] unlatch if greater last of both grabs
    - [x] unlatch if lesser last of both grabs
[x] allow grab-free latch
[x] allow one-handed latch
[x] allow lesser release/latch - supsiciously came for free - i think because becomes one-handed other way
[x] multiple magnets per block
  - might need to choose the greater block more carefully
[x] move to prefabs/replication - perhaps with disabled collider
  - [x] dynamically parent shadow block
[x] add MagneticBlock script to parent that tracks the magnets and their attachments (links? latches?)
[x] MagneticSnapper -> Magnet ?
[x] latch kinematic to kinematic
  - [x] separate PhysicsBinder from Latch
  - [x] add Latch logic to select Binder
  - [x] add KinematicsBinder
[ ] fix kinematics binder re-registration bug
  - grab R Kinematic (decider), snap/latch onto L kinematic - cannot be grabbed, extra empty KinematicsCompound object, error:
    A collider used by an Interactable object is already registered with another Interactable object.
    The BlockFree2 (UnityEngine.BoxCollider) will remain associated with KinematicsCompound
    (UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable), which was registered before KinematicsCompound
    (UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable). The value returned by
     XRInteractionManager.TryGetInteractableForCollider will be the first association.
[ ] unlatch from KinematicsBinder
  - [x] add KinematicsCompound script and move xrgi init there
  - [x] bind compound to grab and release events
  - [x] identify blocks grabbed and released
  - [ ] compound to delegate grab and release to magnetic blocks
  - [ ] enable and identify double handed grabs
[ ] add more blocks to kinematic compound
[x] integration tests
  - [x] hands-free latch
  - [ ] extract test support to Face() and MoveWithin()
  - [ ] double-hand grab snapping
  - [ ] single hand on release
  - [ ] double-hand on release
[x] remove manual rigging startup and variables
[ ] move snap recognition to separate class 
[ ] move snapping behaviour to separate component
[ ] snap precedence:
  - [ ] review and confine decider to initial decision
  - [ ] snap non-kinematic to kinematic
  - [ ] snap single to compound
[ ] unlatch behaviour tweaks:
  - [ ] leaf block on non-leaf block unlatches with single hand
  - [ ] non-leaf block moves compound
[ ] refactor to extract latch so that pipes have magnets
  - [x] spike against blocks without Rigidbody - xrgrabi doesn't work without rigidbody - these are just kinematic
  - [x] extract latch and latch ends
  - [x] remove Magnet.cs latch back refs (handle in Latch)
  - [x] move unlatch into latch
  - [ ] apply vs kinematic
  - [ ] get into same project - add as snapping scene
  - [ ] copy pipes into snapping scene
[ ] isolate xrgi interaction and support other implementations
[ ] mode to remove physics when attached
[ ] make shadow grey colour only in debug mode
[ ] test with loads of blocks
[ ] when is snapping re-test for alignment and update in Update()
[ ] rumble when snapped and grabbing both
[ ] rumble when attracting
[ ] rumble when straining 
[ ] re-visit who is the greater: most blocks attached, tightest grip, moving less, was already fixed, least recently grabbed?
[ ] try break thresholds and smash up a compound
[ ] extra ideas from H
  - different connector types
  - pull / push / rotate to clip
  - flexible pipe
  - neutral / open theme

-- deferred - not sure need
[ ] break block off - fixed joint break force?
[ ] break block off - twist off?

--

so Snappable or MagneticBlock has refs to magnets (static), but dynamically attractions and latches, 
snaps being the superset

 magnets-magnet

 attractions                       magnet.state = free | attracting | straining | snapped | latched
            \
  snaps-snap-attraction            snap.state = attracting | snapped | latched
            \
             latch
            /
     latches

 
